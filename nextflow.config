manifest {
    mainScript = 'clean.nf'
    nextflowVersion = '>=21.04.0'
}

// default parameters
params {
  max_cores = '24'
  cores = '8'
  max_memory = 24.GB
  memory = 8.GB
  help = false
  profile = false

  // input - reads
  nano = ''
  illumina = ''
  illumina_single_end = ''
  fasta = ''
  list = false

  // parameters
  host = false
  own = false
  control = false
  rm_rrna = false
  bbduk = false
  bbduk_kmer = 27
  bbduk_qin = 'auto'
  reads_rna = false
  min_clip = ''

  // folder structure
  output = 'results'
  multiqc_dir = 'Summary'
  nf_runinfo_dir = 'Logs'
  
  // location for storing the conda or singularity environments
  condaCacheDir = 'conda'
  singularityCacheDir = 'singularity'

  // location for autodownload data like databases
  databases = 'nextflow-clean-autodownload'

}

timeline {
  enabled = true
  file = "${params.output}/${params.nf_runinfo_dir}/execution_timeline.html"
}

report {
  enabled = true
  file = "${params.output}/${params.nf_runinfo_dir}/execution_report.html"
}

profiles {

    //executors
    local {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.max_memory
        }
        params.cloudProcess = false
        includeConfig 'configs/local.config'
    }

    lsf {
        executor {
            name = "lsf"
            queueSize = 200
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'
    }

    slurm {
        executor {
            name = "slurm"
            queueSize = 200
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'
    }


    //engines
    docker { 
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.singularityCacheDir
        }
        includeConfig 'configs/container.config'
    }

    conda { 
        conda.cacheDir = params.condaCacheDir
        includeConfig 'configs/conda.config'
    }


    //pre-merged
    standard {
        params.cloudProcess = false
        includeConfig 'configs/local.config'
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    ebi {
  	    params.databases = "/hps/nobackup2/production/metagenomics/$USER/nextflow-databases/"
  	    params.cachedir = "/hps/nobackup2/singularity/$USER"

        workDir = "/hps/nobackup2/production/metagenomics/$USER/nextflow-work-$USER"
        executor {
            name = "lsf"
            queueSize = 200
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'

        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.cachedir
        }
        includeConfig 'configs/container.config' 
    }

    yoda {
  	    params.databases = "/hps/nobackup2/metagenomics/$USER/nextflow-databases/"
  	    params.cachedir = "/hps/nobackup2/metagenomics/$USER/singularity"

        workDir = "/hps/nobackup2/metagenomics/$USER/nextflow-work-$USER"
        executor {
            name = "lsf"
            queueSize = 200
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'

        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.cachedir
        }
        includeConfig 'configs/container.config' 
    }

    ara {
        params.cloudProcess = true
        workDir = "/beegfs/rna-hta/$USER/work"
  	    params.databases = "/beegfs/rna-hta/nextflow-clean-autodownload/"
        conda { cacheDir = "/beegfs/rna-hta/$USER/nextflow-conda-cache" }        
        process {
            clusterOptions = '--partition=s_standard,s_fat,b_standard,b_fat'
            withLabel: smallTask { executor = 'local' }
        }
        executor {
            name = "slurm"
            queueSize = 200
        } 
        process.cache = "lenient"
        includeConfig 'configs/node.config'
        includeConfig 'configs/conda.config' 
    }

    // CONFIGURE YOUR PRIVATE CLOUD
    gcloud {             
        params.databases = 'gs://databases-matrice/databases/'
        bucketDir = 'gs://matrice/nextflow-tmp/clean'
        //workDir = "/tmp/nextflow-work-$USER"

        executor { name = 'google-lifesciences' }
 
        google {
            project = 'nextflow-auto-255816'
            zone = 'europe-west1-b' 
        }  

        params.cloudProcess = true
        includeConfig 'configs/node.config'

        docker { enabled = true }
        includeConfig 'configs/container.config'

        cloud { preemptible = true }

        // we need a docker also for basic functionalities in the cloud
        process {
            withLabel: noDocker { cpus = 1; memory = '4.0 GB'; container = 'nanozoo/template:3.8--ccd0653' } 
        }

    }

    

}
